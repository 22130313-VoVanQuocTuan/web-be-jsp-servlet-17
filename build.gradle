plugins {
    id 'war' // Để xây dựng file WAR cho ứng dụng web
    id 'java' // Hỗ trợ Java
    id 'java-library'
    id 'maven-publish'
    id "org.hidetake.ssh" version "2.11.2"

}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
        }
        resources {
            srcDirs 'src/main/resources'
        }
    }
}
apply plugin: 'org.hidetake.ssh'

group 'hcmuaf.nlu.edu.vn'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral() // Kho lưu trữ chính
}
dependencies {
    // Jakarta Servlet API (dùng compileOnly thay providedCompile)
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'

    // JUnit 5 (test scope)
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0-M2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0-M2'

    // JSTL (Jakarta Standard Tag Library)
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.1'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'

    // MySQL Connector
    implementation 'com.mysql:mysql-connector-j:8.4.0'

    // Spring Security Core
    implementation 'org.springframework.security:spring-security-core:6.3.2'

    // Java Mail API
    implementation 'javax.mail:javax.mail-api:1.6.2'
    implementation 'com.sun.mail:javax.mail:1.6.2'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.9'

    // Google API Client (đồng bộ phiên bản)

    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.google.http-client:google-http-client-jackson:1.23.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.23.0'
    implementation 'com.google.apis:google-api-services-oauth2:v2-rev20200213-1.30.9'

    // JSON (cho Facebook hoặc các mục đích khác)
    implementation 'org.json:json:20240303'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8' // Tương ứng project.build.sourceEncoding
}
tasks.processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
remotes {
    host {
        host = '160.187.229.5'
        user = 'root'
        password = '0987554502@Aa'
    }
}


ssh.settings {
    knownHosts = allowAnyHosts
}
task docker_app_start {
    doLast {
        println 'begin docker_app_start'

        ssh.run {
            session(remotes.host) {
                // Dừng container nếu đang chạy
                execute 'docker rm -f tomcat10', ignoreError: true
                // Chạy lại container
                execute 'docker run -d --name tomcat10' +
                        '   -p 80:8080 -p 443:8443' +
                        '   -v /usr/deploy:/usr/local/tomcat/webapps' +
                        '   -v /etc/tomcat/ssl:/etc/tomcat/ssl' +
                        '   tomcat:10'

            }
        }
    }
}
task docker_upload_file_to_server {
    doLast {
        println 'begin docker_upload_file_to_server'
        ssh.run {
            session(remotes.host) {
                // Xoá file và thư mục cũ
                remove 'rm -f /usr/deploy/tqh.war'
                remove 'rm -rf /usr/deploy/tqh'
                remove 'rm -f /usr/deploy/ROOT.war'
                remove 'rm -rf /usr/deploy/ROOT'

                // Upload file WAR
                put from: file("${project.projectDir}/build/libs/tqh.war"),
                        into: "/usr/deploy/tqh.war"

                // Đổi tên thành ROOT.war
                execute 'mv /usr/deploy/tqh.war /usr/deploy/ROOT.war'
            }
        }
    }
}
task docker_deploy {
    dependsOn build
    dependsOn docker_app_start
    dependsOn docker_upload_file_to_server


    docker_upload_file_to_server.mustRunAfter docker_app_start
    mustRunAfter build
}

java {
    sourceCompatibility = JavaVersion.VERSION_17 // Tương ứng maven.compiler.source
    targetCompatibility = JavaVersion.VERSION_17 // Tương ứng maven.compiler.target
    }

war {
        archiveFileName = 'tqh.war' // Tên file WAR khi build
}